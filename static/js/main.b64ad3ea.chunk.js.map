{"version":3,"sources":["Profile/Profile.module.css","Statistics/StatisticalData.module.css","FriendList/FriendList.module.css","Transactions/TransactionHistory.module.css","Profile/Profile.js","Statistics/StatisticalData.js","FriendList/FriendList.js","Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","user","map","key","id","className","styles","profile","description","src","avatar","alt","width","name","tag","location","stats","label","quantity","followers","views","likes","defaultProps","getRandomColorRgb","red","Math","floor","random","green","blue","Statistics","title","statistics","statList","stat","item","style","backgroundColor","percentage","FriendList","friends","friendList","friend","isOnline","online","offline","TransactionHistory","items","transactionHistory","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b64ad3ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3qeoO\",\"description\":\"Profile_description__3OqUM\",\"avatar\":\"Profile_avatar__1Ou49\",\"name\":\"Profile_name__1KIrn\",\"tag\":\"Profile_tag__15BXl\",\"location\":\"Profile_location__38TpG\",\"stats\":\"Profile_stats__u1UEa\",\"label\":\"Profile_label__2LBI6\",\"quantity\":\"Profile_quantity__2j_jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticalData_statistics__aNBiQ\",\"title\":\"StatisticalData_title__YSgC0\",\"statList\":\"StatisticalData_statList__2j1ZE\",\"item\":\"StatisticalData_item__2mFPL\",\"label\":\"StatisticalData_label__1Bxn7\",\"percentage\":\"StatisticalData_percentage__3fwSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__35tbq\",\"item\":\"FriendList_item__1E5a2\",\"status\":\"FriendList_status__2UX45\",\"online\":\"FriendList_online__2TBYO FriendList_status__2UX45\",\"offline\":\"FriendList_offline__3DgGv FriendList_status__2UX45\",\"avatar\":\"FriendList_avatar__2PJZ1\",\"name\":\"FriendList_name__1hGeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__WkW3c\"};","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ user }) => {\r\n  return (\r\n    <Fragment>\r\n      {user.map(user => (\r\n        <div key={user.id} className={styles.profile}>\r\n          <div className={styles.description}>\r\n            <img\r\n              src={user.avatar}\r\n              alt=\"user avatar\"\r\n              width=\"120\"\r\n              className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{user.name}</p>\r\n            <p className={styles.tag}>@{user.tag}</p>\r\n            <p className={styles.location}>{user.location}</p>\r\n          </div>\r\n\r\n          <ul className={styles.stats}>\r\n            <li>\r\n              <span className={styles.label}>Followers</span>\r\n              <span className={styles.quantity}>{user.stats.followers}</span>\r\n            </li>\r\n            <li>\r\n              <span className={styles.label}>Views</span>\r\n              <span className={styles.quantity}>{user.stats.views}</span>\r\n            </li>\r\n            <li>\r\n              <span className={styles.label}>Likes</span>\r\n              <span className={styles.quantity}>{user.stats.likes}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  alt: \"user avatar\"\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      tag: PropTypes.string,\r\n      location: PropTypes.string\r\n    })\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./StatisticalData.module.css\";\r\n\r\nfunction getRandomColorRgb() {\r\n  let red = Math.floor(Math.random() * 256);\r\n  let green = Math.floor(Math.random() * 256);\r\n  let blue = Math.floor(Math.random() * 256);\r\n  return `rgb(${red}, ${green}, ${blue})`;\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <Fragment>\r\n    <section className={styles.statistics}>\r\n      {{ title } && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map(stat => (\r\n          <li\r\n            key={stat.id}\r\n            className={styles.item}\r\n            style={{\r\n              backgroundColor: getRandomColorRgb()\r\n            }}\r\n          >\r\n            <span className={styles.label}>{stat.label}</span>\r\n            <span className={styles.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  </Fragment>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.friendList}>\r\n        {friends.map(friend => (\r\n          <li key={friend.id} className={styles.item}>\r\n            <span className={friend.isOnline ? styles.online : styles.offline}>\r\n              {friend.isOnline}\r\n            </span>\r\n            <img\r\n              className={styles.avatar}\r\n              src={friend.avatar}\r\n              alt=\"\"\r\n              width=\"58\"\r\n            />\r\n            <p className={styles.name}>{friend.name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default FriendList;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  // const { id, type, amount, currency } = items;\r\n  return (\r\n    <Fragment>\r\n      <table className={styles.transactionHistory}>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map(item => (\r\n            <tr key={item.id}>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./Profile/Profile\";\nimport user from \"./Profile/user.json\";\nimport Statistics from \"./Statistics/StatisticalData\";\nimport statisticalData from \"./Statistics/statistical-data.json\";\nimport FriendList from \"./FriendList/FriendList\";\nimport friends from \"./FriendList/friends.json\";\nimport TransactionHistory from \"./Transactions/TransactionHistory\";\nimport transactions from \"./Transactions/transactions.json\";\n\nconst App = () => (\n  <div>\n    <Profile user={user} />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}